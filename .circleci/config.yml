# Golang CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-go/ for more details
version: 2
jobs:

  build:
    docker:
      # specify the version
      - image: circleci/golang:1.10.8

    working_directory: /go/src/github.com/AndresBott/Fe26
    steps:
      - checkout


      # specify any bash command here prefixed with `run: `
      - run: go get -v -t -d ./...
      - run: go get -u -v github.com/go-task/task/cmd/task # needed to run the build task
      - run: go get -u github.com/gobuffalo/packr/v2/packr2 # needed to run packr2
      - run: go get github.com/konsorten/go-windows-terminal-sequences # dependency not resolven on linux, needed wor windows build
      - run: go test -v ./...

      ## npm: https://tecadmin.net/install-latest-nodejs-npm-on-debian/
      - run: sudo apt-get install curl
      - run: curl -sL https://deb.nodesource.com/setup_10.x | sudo bash -
      - run: sudo apt-get install nodejs
      - run: node -v
      - run: npm -v

      ## take care of npm dependencies
      - run: sudo npm install -g gulp-cli
      - run: cd web/app/ && npm install

      - run: task clean
      - run: task test
      - run: task build
      - run: ./out/fe26-linux-amd64 -v
      - persist_to_workspace:
          root: ./
          paths:
            - out/*

#      ## todo: push changes to git
#      - add_ssh_keys:
#          # use custom write ssh key
#          fingerprints:
#            - "db:19:93:65:46:da:81:cb:99:0b:7d:e2:9a:99:c9:c5"
#      - run: git config user.email "circleci@andresbott.com"
#      - run: git config user.name "CircleCI"

  release:
    docker:
      - image: circleci/golang:1.10.8

    steps:
      - attach_workspace:
         at: ./
      - run: find
      - run: ls -l
      - run: ls -l out
      - run: echo "$PATH"
      - run: id
      - run: pwd
      - run: sudo chmod +x ./out/fe26-linux-amd64
      - run: sudo cp ./out/fe26-linux-amd64 /usr/local/bin/
      - run: fe26-linux-amd64 -v
      - run: go get github.com/tcnksm/ghr
      - run:
          name: "Publish Release on GitHub"
          command: |
            VERSION=$(fe26-linux-amd64 -v)
            echo "ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -delete ${VERSION} ./out/"
            ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -delete ${VERSION} ./out/




workflows:
  version: 2
  build:
    jobs:
      - build:
          filters:
            branches:
              only: master

      - release:
          requires:
            - build
          filters:
            branches:
              only: master

